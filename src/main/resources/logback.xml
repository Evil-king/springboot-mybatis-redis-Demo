<configuration>
    <!-- 一定要设置按天切分和按大小切分 -->
    <!-- 日志目录路径变量(这里的路径需要根据自己系统去创建) -->
    <property name="LOG_DIR_PATH" value="/Users/Macx/Desktop/data/logs/springboot-mybatis-redis" />
    <!--输出console -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--输出格式 -->
        <encoder>
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss} [%service] [%hostname] [%level] [%thread] [%class:%line] - %m%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%thread] [%class:%line] - %m%n</pattern>
        </encoder>
    </appender>
    <!--输出到文件 -->
    <appender name="DEBUG-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--消息过滤 debug执行日志，否则抛弃 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
        <!--日志输出的文件名，路径项目根目录 -->
        <file>${LOG_DIR_PATH}/debug.log</file>
        <!--时间回滚，当天的记录记录在当天的已时间命名的文件中 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${LOG_DIR_PATH}/debug.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- keep 3 days' worth of history -->
            <MaxHistory>30</MaxHistory>
            <maxFileSize>500MB</maxFileSize>
            <!-- 最大日志容量,根据切分后的文件总大小来判断 -->
            <totalSizeCap>500GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%thread] [%class:%line] - %m%n</pattern>
        </encoder>
    </appender>

    <!--输出到文件 -->
    <appender name="INFO-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--消息过滤 debug执行日志，否则抛弃 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
        <!--日志输出的文件名，路径项目根目录 -->
        <file>${LOG_DIR_PATH}/info.log</file>
        <!--时间回滚，当天的记录记录在当天的已时间命名的文件中 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${LOG_DIR_PATH}/info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- keep 3 days' worth of history -->
            <MaxHistory>30</MaxHistory>
            <maxFileSize>500MB</maxFileSize>
            <!-- 最大日志容量,根据切分后的文件总大小来判断 -->
            <totalSizeCap>500GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%thread] [%class:%line] - %m%n</pattern>
        </encoder>
    </appender>

    <!--输出到文件 -->
    <appender name="ERROR-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--消息过滤 debug执行日志，否则抛弃 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
        <!--日志输出的文件名，路径项目根目录 -->
        <file>${LOG_DIR_PATH}/error.log</file>
        <!--时间回滚，当天的记录记录在当天的已时间命名的文件中 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${LOG_DIR_PATH}/error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- keep 3 days' worth of history -->
            <MaxHistory>30</MaxHistory>
            <maxFileSize>500MB</maxFileSize>
            <!-- 最大日志容量,根据切分后的文件总大小来判断 -->
            <totalSizeCap>500GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%thread] [%class:%line] - %m%n</pattern>
        </encoder>
    </appender>

    <!-- logger的作用是用来设置特殊日志的,因为全局日志级别是info,可以通过这个设置来打印debug日志,这里的级别是最高的,只要正确配置就一定会输出 -->
    <logger name="com.example.logback.task" level="debug">
        <appender-ref ref="DEBUG-OUT" />
    </logger>

    <!-- 输出mybatis的sql语句到debug文件中 -->
     <logger name="com.example.project.dao" level="debug" additivity="true"> <appender-ref ref="DEBUG-OUT"/>
     </logger>

    <!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
    <!-- 打印info级别日志及以上级别日志 -->
    <root level="info">
        <!-- 输出到控制台 -->
        <appender-ref ref="STDOUT" />
        <appender-ref ref="DEBUG-OUT" />
        <appender-ref ref="INFO-OUT" />
        <appender-ref ref="ERROR-OUT" />
    </root>
</configuration>